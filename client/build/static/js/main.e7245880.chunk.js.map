{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","input","setInput","words","setWords","show","setShow","loading","setLoading","useEffect","a","fetch","res","json","data","className","style","minHeight","maxWidth","onSubmit","e","preventDefault","window","alert","htmlFor","min","id","value","type","required","onChange","target","onClick","maxHeight","slice","map","item","index","word","count","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPA0GeA,MAtGf,WACE,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwBJ,oBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KA+BA,OA7BAC,oBAAS,sBAAC,8BAAAC,EAAA,6DACRF,GAAW,GADH,SAEUG,MAAM,SAFhB,cAEFC,EAFE,gBAGWA,EAAIC,OAHf,OAGFC,EAHE,OAIRV,EAASU,GACTN,GAAW,GALH,2CAMP,IAuBCD,EAEA,sBAAMQ,UAAU,6DAA6DC,MAAO,CAAEC,UAAW,SAAjG,SACE,oBAAIF,UAAU,wBAAd,uCAKC,mCAGL,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,kCAAd,gCAGA,qBAAKA,UAAU,yBAAyBC,MAAO,CAAEE,SAAU,SAA3D,SACE,uBAAMC,SA9BS,SAACC,GACpBA,EAAEC,iBACY,IAAVpB,EACFqB,OAAOC,MAAM,8BAEbjB,GAAQ,IAyBN,UACE,uBAAOkB,QAAQ,SAAST,UAAU,aAAlC,6BACA,uBACEU,IAAI,IACJC,GAAG,SACHC,MAAO1B,EACP2B,KAAK,SACLC,UAAU,EACVC,SA7Ca,SAACV,GACtBlB,EAASkB,EAAEW,OAAOJ,OACJ,IAAV1B,GAAyB,KAAVA,GACjBK,GAAQ,IA2CFS,UAAU,sBACZ,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,SACE,wBAAQa,KAAK,SACXb,UAAU,qBADZ,yBAGF,qBAAKA,UAAU,MAAf,SACE,wBAAQa,KAAK,QACXI,QAtCI,WAChB9B,EAAS,IACTI,GAAQ,IAqCIS,UAAU,uBAFZ,6BAOPV,EAAO,qBAAIU,UAAU,wBAAd,UAAuCd,EAAvC,iCAAgF,GACvFI,EAAO,sBAAKU,UAAU,yBAAyBC,MAAO,CAAEE,SAAU,QAASe,UAAW,SAA/E,UACN,sBAAKlB,UAAU,4BAAf,UACE,qBAAKA,UAAU,MAAf,SAAqB,6CACrB,qBAAKA,UAAU,MAAf,SAAqB,gDAEvB,qBAAKA,UAAU,SAAf,SAEIZ,EAAM+B,MAAM,EAAGjC,GAAOkC,KAAI,SAACC,EAAMC,GAC/B,IAAQC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MACd,OACE,sBAAKxB,UAAU,4BAAf,UACE,qBAAKA,UAAU,MAAf,SACGuB,IAEH,qBAAKvB,UAAU,MAAf,SACGwB,MAL2CF,WAYjD,SCzFAG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e7245880.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport { useEffect, useState } from 'react'\n\nfunction App() {\n  const [input, setInput] = useState(0)\n  const [words, setWords] = useState([])\n  const [show, setShow] = useState(false)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(async () => {\n    setLoading(true)\n    const res = await fetch('/data')\n    const data = await res.json();\n    setWords(data)\n    setLoading(false)\n  }, [])\n\n  const handleOnChange = (e) => {\n    setInput(e.target.value)\n    if (input === 0 || input === '') {\n      setShow(false)\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (input === 0) {\n      window.alert('Enter Value more than 0 !!')\n    } else {\n      setShow(true)\n    }\n  }\n\n  const resetForm = () => {\n    setInput('');\n    setShow(false)\n  }\n\n  if (loading) {\n    return (\n      <main className=\"container d-flex align-items-center justify-content-center\" style={{ minHeight: '100vh' }}>\n        <h1 className=\"display-2 text-center\">Loading....ðŸš€</h1>\n      </main>\n    )\n  }\n\n  return <>\n\n\n    <div className=\"container\">\n      <h1 className=\"display-4 text-center mt-5 mb-3\">\n        Invictus Challenge\n      </h1>\n      <div className=\"card p-4 m-auto border\" style={{ maxWidth: '600px' }}>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"number\" className=\"form-label\">Number of Words</label>\n          <input\n            min='0'\n            id='number'\n            value={input}\n            type=\"number\"\n            required={true}\n            onChange={handleOnChange}\n            className=\"form-control mb-3\" />\n          <div className=\"row\">\n            <div className=\"col\">\n              <button type='submit'\n                className=\"btn btn-dark w-100\">Get Words</button>\n            </div>\n            <div className=\"col\">\n              <button type='reset'\n                onClick={resetForm}\n                className=\"btn btn-danger w-100\">Reset</button>\n            </div>\n          </div>\n        </form>\n      </div>\n      {show ? <h1 className=\"display-4 text-center\">{input} frequently occuring Words.</h1> : ''}\n      {show ? <div className=\"card p-4 border m-auto\" style={{ maxWidth: '600px', maxHeight: '600px' }}>\n        <div className=\"container row text-center\">\n          <div className=\"col\"><strong>Words</strong></div>\n          <div className=\"col\"><strong>Count</strong></div>\n        </div>\n        <div className=\"scroll\">\n          {\n            words.slice(0, input).map((item, index) => {\n              const { word, count } = item\n              return (\n                <div className=\"container row text-center\" key={index}>\n                  <div className=\"col\">\n                    {word}\n                  </div>\n                  <div className=\"col\">\n                    {count}\n                  </div>\n                </div>\n              )\n            })\n          }\n        </div>\n      </div> : ''}\n    </div>\n  </>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}